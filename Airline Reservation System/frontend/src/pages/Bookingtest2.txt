import React, { Component } from 'react';
import axios from 'axios';

class LocationDropdowns extends Component {
    constructor(props) {
        super(props);
        this.state = {
            mainRegion: '',
            subRegion: '',
            airports: [],
            mainRegionOptions: [],
            subRegionOptions: [],
        };
    }

    componentDidMount() {
        // Load the main regions initially
        this.loadMainRegions();
    }

    loadMainRegions = () => {
        axios.get('http://localhost:8000/location/parent_locations')
            .then((response) => {
                this.setState({
                    mainRegionOptions: response.data,
                });
            })
            .catch((error) => {
                console.error(error);
            });
    }

    handleMainRegionChange = (event) => {
        const mainRegion = event.target.value;
        this.setState({
            mainRegion,
            subRegion: '',
            airports: [],
        });

        // Load sub regions based on the selected main region
        axios.get('http://localhost:8000/location/sub_locations', {
            params: { parentLocation: mainRegion }
        })
            .then((response) => {
                this.setState({
                    subRegionOptions: response.data,
                });
            })
            .catch((error) => {
                console.error(error);
            });
    }

    handleSubRegionChange = (event) => {
        const subRegion = event.target.value;
        this.setState({
            subRegion,
        });

        // Load airports based on the selected sub region
        axios.get('http://localhost:8000/location/airports', {
            params: { sublocation: subRegion }
        })
            .then((response) => {
                this.setState({
                    airports: response.data,
                });
            })
            .catch((error) => {
                console.error(error);
            });
    }

    render() {
        return (
            <div>
                <label>Main Region:</label>
                <select value={this.state.mainRegion} onChange={this.handleMainRegionChange}>
                    <option value="">Select Main Region</option>
                    {this.state.mainRegionOptions.map((region) => (
                        <option key={region.location_id} value={region.location_name}>{region.location_name}</option>
                    ))}
                </select>

                <br />

                <label>Sub Region:</label>
                <select value={this.state.subRegion} onChange={this.handleSubRegionChange}>
                    <option value="">Select Sub Region</option>
                    {this.state.subRegionOptions.map((region) => (
                        <option key={region.location_id} value={region.location_name}>{region.location_name}</option>
                    ))}
                </select>

                <br />

                <label>Airport:</label>
                <select>
                    <option value="">Select Airport</option>
                    {this.state.airports.map((airport) => (
                        <option key={airport.location_id} value={airport.name}>{airport.name}</option>
                    ))}
                </select>
            </div>
        );
    }
}

export default LocationDropdowns;
